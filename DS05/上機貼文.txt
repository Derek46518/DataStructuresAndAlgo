任務一
簡介 :透過任務零建立的無向圖衍伸出每個ID所在的交友圈。
方法 :逐筆將任務零的資料跑遍，判斷是否有造訪過此節點，是則跳過這筆資料往下筆資料做，否則將此節點設為visit並將此節點內的所有有連結的ID判斷是否visit再放入stack，接著遞迴stack最後一項節點，在重複以上。當判斷到此節點已visit就pop stack最後一項，並將ID放入Connect list再離開遞迴，直至將stack清空。將資料分群後，依照每群的節點數量排序，由多至少，再印出分群數量與群內各節點數量，並寫入.cc檔。


任務二
簡介 :輸入ID，以他當起點，用Dijkstra找出他所在的分群內對所有可連接到的節點的最短路徑。
方法 :先建立該分群的二維陣列表，包含點到點之間的權重，在使用Dijkstra，以目前ID為起點找出他目前可到且未造訪過的節點當最短路徑，在透過該節點找出他可連接到節點的路徑並總合權重，在與目前ID的一微陣列做比較，是否為目前最短，是則取代原本的資料。以上重複至每個節點都造訪過為止，就可找出最短路徑，
最後將資料寫入.ds檔案。

心得 :經過上次有向圖的作業，這次無向圖相較有更清晰的思路去寫這次作業，再透過影片教材教過的Dijkstra實作並使用，讓我們對內容更有印象。

流程圖 :

影片 : https://youtu.be/lgsvBIrJ_rk